# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class KubeProxyCommand < Formula
  desc "kube-proxyCommand use Kubernetes Pod port-forward as ssh ProxyCommand"
  homepage "https://github.com/ciiiii/kube-proxyCommand"
  version "0.1.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/ciiiii/kube-proxyCommand/releases/download/v0.1.0/kube-proxyCommand_0.1.0_Darwin-arm64.tar.gz"
      sha256 "89856222c571eaf2f172df4655872f38b8a58c20ffeb4a7a37cad9dc50d85de0"

      def install
        if build.head?
          ldflags = %W[
            -s -w
          ]
          system "go", "build", *std_go_args(output: "kube-proxyCommand", ldflags: ldflags.join(" ")), "main.go"
        end
        bin.install "kube-proxyCommand"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/ciiiii/kube-proxyCommand/releases/download/v0.1.0/kube-proxyCommand_0.1.0_Darwin-x86_64.tar.gz"
      sha256 "f45e6e0161c8cf5824437aab974796ecb2fc33734acf512c13394cd50d1154a6"

      def install
        if build.head?
          ldflags = %W[
            -s -w
          ]
          system "go", "build", *std_go_args(output: "kube-proxyCommand", ldflags: ldflags.join(" ")), "main.go"
        end
        bin.install "kube-proxyCommand"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/ciiiii/kube-proxyCommand/releases/download/v0.1.0/kube-proxyCommand_0.1.0_Linux-x86_64.tar.gz"
      sha256 "eb1efc448ba4e64612bdcf6cc958b67ed3ff1379ec001e9afe2ee71d766e031e"

      def install
        if build.head?
          ldflags = %W[
            -s -w
          ]
          system "go", "build", *std_go_args(output: "kube-proxyCommand", ldflags: ldflags.join(" ")), "main.go"
        end
        bin.install "kube-proxyCommand"
      end
    end
  end

  head "https://github.com/ciiiii/kube-proxyCommand", branch: "master"
  head do
    depends_on "go" => :build
  end

  depends_on "go" => :optional
  depends_on "git"
end
